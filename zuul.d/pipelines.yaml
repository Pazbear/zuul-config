- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
    trigger:
      github.com:
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        - event: pull_request
          action: comment
          comment: (?i)^\s*recheck\s*$
    start:
      github.com:
        status: "pending"
        status-url: "https://www.google.com"
        comment: false
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      github.com:
        status: "success"
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com:
        status: "failure"
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"

- pipeline:
    name: gate
    description: |
      Changes that have been approved by core developers are enqueued
      in order in this pipeline, and if they pass tests, will be
      merged.
    success-message: Build succeeded (gate pipeline).
    failure-message: |
      Build failed (gate pipeline).  For information on how to proceed, see
      http://docs.openstack.org/infra/manual/developers.html#automated-testing
    manager: dependent
    precedence: high
    supercedes: check
    require:
      github.com:
        review: []
        # Require label
        label: mergeit
        open: True
        current-patchset: True
    trigger:
      github.com:
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request
          action: comment
          comment: (?i)^\s*regate\s*$
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request_review
          action: dismissed
          state: request_changes
        - event: pull_request
          action: status
          status: "www.google.com" #"softwarefactory-project-zuul\\[bot\\]:ansible/check:success"
        - event: pull_request
          action: labeled
          label:
            - mergeit
    start:
      github.com:
        status: "pending"
        status-url: "www.google.com" #"https://ansible.softwarefactory-project.io/zuul/status.html"
        comment: false
      mqtt:
        topic: "zuul/{pipeline}/start/{project}/{branch}"
    success:
      github.com:
        status: "success"
        merge: true
        comment: true
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    failure:
      github.com:
        status: "failure"
        comment: true
      mqtt:
        topic: "zuul/{pipeline}/result/{project}/{branch}/{change}"
    window-floor: 20
    window-increase-factor: 2
